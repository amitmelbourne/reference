{
	"info": {
		"_postman_id": "47c8a309-f9c5-43c5-9cc2-191a61fe7b91",
		"name": "Digital_ExcesChangeRequests (20181119)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ExcessChange",
			"item": [
				{
					"name": "MPL ExcessChange Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var xsrf = postman.getResponseHeader(\"x-csrf-token\");\r",
									"console.log(xsrf);\r",
									"//postman.setEnvironmentVariable(\"xsrftoken\", xsrf);\r",
									"//console.log(xsrfCookie.value);\r",
									"\r",
									"\r",
									"\r",
									"postman.setGlobalVariable(\"xsrftoken\", xsrf);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "DGTL2GW",
									"type": "string"
								},
								{
									"key": "password",
									"value": "Welcome@12",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic REdUTDJHVzpXZWxjb21lQDEy"
							},
							{
								"key": "X-CSRF-Token",
								"value": "Fetch"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://sapmgd.medibank.local/sap/opu/odata/sap/ZPM_GWS_POLICY_SRV/$metadata",
							"protocol": "http",
							"host": [
								"sapmgd",
								"medibank",
								"local"
							],
							"path": [
								"sap",
								"opu",
								"odata",
								"sap",
								"ZPM_GWS_POLICY_SRV",
								"$metadata"
							]
						},
						"description": "Received the list of changes related to excess change within the given period and the known policy number"
					},
					"response": []
				},
				{
					"name": "MPL Get ExcessEvent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "56be6674-7b4e-4cbf-a4d6-970bf8e0f293",
								"exec": [
									"function generateUUID() { // Public Domain/MIT",
									"    var d = new Date().getTime();",
									"    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){",
									"        d += performance.now(); //use high-precision timer if available",
									"    }",
									"    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {",
									"        var r = (d + Math.random() * 16) % 16 | 0;",
									"        d = Math.floor(d / 16);",
									"        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);",
									"    });",
									"}",
									"",
									"",
									"postman.setGlobalVariable(\"guid32\", generateUUID());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b0763401-04fe-430d-899a-5ebc684afe56",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//tests[\"has 2 result items\"] = jsonData.d.results.length === 2;",
									"tests[\"RequestID header is present\"] = postman.getResponseHeader(\"RequestID\");",
									"//tests[\"etag header is present\"] = postman.getResponseHeader(\"etag\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Welcome@12",
									"type": "string"
								},
								{
									"key": "username",
									"value": "DGTL2GW",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic REdUTDJHVzpXZWxjb21lQDEy"
							},
							{
								"key": "RequestID",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://sapmgd.medibank.local/sap/opu/odata/sap/ZPM_GWS_POLICY_SRV/PolicyExcessEventSet?$filter=EffectiveDate+ge+'2018-10-10'+and+EffectiveDate+le+'2019-10-10'+and+PolicyNumber+eq+'MOCK'&$format=json",
							"protocol": "http",
							"host": [
								"sapmgd",
								"medibank",
								"local"
							],
							"path": [
								"sap",
								"opu",
								"odata",
								"sap",
								"ZPM_GWS_POLICY_SRV",
								"PolicyExcessEventSet"
							],
							"query": [
								{
									"key": "$filter",
									"value": "EffectiveDate+ge+'2018-10-10'+and+EffectiveDate+le+'2019-10-10'+and+PolicyNumber+eq+'MOCK'"
								},
								{
									"key": "$format",
									"value": "json"
								}
							]
						},
						"description": "Received the list of changes related to excess change within the given period and the known policy number"
					},
					"response": []
				},
				{
					"name": "MPL Excess Change Simulation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "523e66cd-ba77-47b0-afa3-68815c198d60",
								"exec": [
									"function generateUUID() { // Public Domain/MIT",
									"    var d = new Date().getTime();",
									"    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){",
									"        d += performance.now(); //use high-precision timer if available",
									"    }",
									"    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {",
									"        var r = (d + Math.random() * 16) % 16 | 0;",
									"        d = Math.floor(d / 16);",
									"        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);",
									"    });",
									"}",
									"",
									"",
									"postman.setGlobalVariable(\"guid32\", generateUUID());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "934701f1-820a-4159-8e94-7bfc9b7fdde6",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//tests[\"has 2 result items\"] = jsonData.d.results.length === 2;",
									"tests[\"RequestID header is present\"] = postman.getResponseHeader(\"RequestID\");",
									"//tests[\"etag header is present\"] = postman.getResponseHeader(\"etag\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "DGTL2GW",
									"type": "string"
								},
								{
									"key": "password",
									"value": "Welcome@12",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic REdUTDJHVzpXZWxjb21lQDEy"
							},
							{
								"key": "RequestID",
								"value": "{{guid32}}"
							},
							{
								"key": "RepeatabilityCreation",
								"value": "2016-07-13T20:58:00"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "X-CSRF-Token",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"d\":\r\n{\r\n\"PolicyNumber\":\"123412342\",\r\n\"DeductibleCode\":\"12345\",\r\n\"SimulationIndicator\":true,\r\n\"Premium\":{\r\n\r\n},\r\n\"NextPayment\":{}\r\n}}"
						},
						"url": {
							"raw": "http://sapmgd.medibank.local/sap/opu/odata/sap/ZPM_GWS_POLICY_SRV/PolicyExcessSet",
							"protocol": "http",
							"host": [
								"sapmgd",
								"medibank",
								"local"
							],
							"path": [
								"sap",
								"opu",
								"odata",
								"sap",
								"ZPM_GWS_POLICY_SRV",
								"PolicyExcessSet"
							]
						},
						"description": "Received the list of changes related to excess change within the given period and the known policy number"
					},
					"response": []
				}
			]
		}
	]
}